import requests
from django.conf import settings
import logging
import html

logger = logging.getLogger(__name__)


def escape_html(text):
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML —Å–∏–º–≤–æ–ª—ã –¥–ª—è Telegram"""
    if not text:
        return ""
    return html.escape(str(text))


def send_telegram_notification(feedback):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –≤ Telegram

    :param feedback: —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–µ–ª–∏ FeedbackRequest
    :return: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    bot_token = settings.TELEGRAM_BOT_TOKEN
    chat_id = settings.TELEGRAM_CHAT_ID

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if not bot_token or not chat_id:
        logger.warning('Telegram settings not configured')
        return False

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è HTML
    full_name = escape_html(feedback.full_name)
    phone = escape_html(feedback.phone)
    company = escape_html(feedback.company)
    source = escape_html(feedback.source)
    date_str = feedback.created_at.strftime('%d.%m.%Y %H:%M')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = f"""
üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!</b>

üë§ <b>–§–ò–û:</b> {full_name}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}
üè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> {company}
üìç <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {source}
üïê <b>–î–∞—Ç–∞:</b> {date_str}

ID –∑–∞—è–≤–∫–∏: #{feedback.id}
    """.strip()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram Bot API
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'

    data = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'HTML'
    }

    try:
        response = requests.post(url, data=data, timeout=10)

        # –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        if not response.ok:
            logger.error(f'Telegram API error: {response.status_code} - {response.text}')
            return False

        result = response.json()

        if result.get('ok'):
            logger.info(f'Telegram notification sent for feedback #{feedback.id}')
            return True
        else:
            logger.error(f'Telegram API error: {result}')
            return False

    except requests.exceptions.RequestException as e:
        logger.error(f'Failed to send Telegram notification: {str(e)}')
        return False